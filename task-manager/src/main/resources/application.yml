server:
  port: 8082
spring:
  application:
    name: task-manager
  kafka:
    bootstrap-servers: localhost:29092,localhost:39092
#    producer:
#      acks: all
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#      bootstrap-servers: localhost:29092, localhost:39092
#    consumer:
#      auto-offset-reset: latest
#      bootstrap-servers: localhost:29092, localhost:39092
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: ${topicprops.groupId}
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/tasksdb
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true

topicprops:
  partitions: 2
  replicas: 2
  validateRequestTopic: "validate-request"
  validateResponseTopic: "validate-response"
  replyTimeoutSeconds: 10
  bootstrapServers: "localhost:29092,localhost:39092"
  consumerAutoReset: "latest"
  producerAckConfig: "1"
  debeziumOutboxTopicName: "events.public.crud_events"
urls:
  validator: http://localhost:8084
